name: build pipeline
on:
  push:
    branches:
    - main
  # Manually trigger from Actions tab
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.A_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.S_KEY }}
  AWS_DEFAULT_REGION: "us-east-1"
  APPNAME: ${{ secrets.APPNAME }}
  ENVNAME: ${{ github.ref_name }}
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  StackName: ${{ secrets.APPNAME }}-${{ secrets.ENVNAME }}
  SOURCE_REPO: vipinable/classified-nexus-ui
  ARTIFACT_NAME: build-files 
  
jobs:
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: all
    defaults:
      run:
        shell: bash

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Check aws cli
        run: aws --version && aws sts get-caller-identity --query Account --output text
      - name: Prepare lambda layer
        run: mkdir -p layer/bin/python && pip install -r iac/src/requirements.txt -t layer/bin/python
      - name: Build UI from source
        run: |
            curl -Lsf -H "Authorization: token ${GITHUB_TOKEN}" \
            -o repo.tar.gz \
            https://github.com/vipinable/classified-nexus-ui/archive/refs/heads/main.tar.gz
            tar -xzf repo.tar.gz
            cd classified-nexus-ui-main && \
            npm ci && \
            npm run build && \
            cp dist/index.html ../iac/src/templates/index.j2
            mv dist ../
            
      #- name: update npm package
      # run: sudo npm install -g npm
      - name: install aws cdk package
        run: npm install -g aws-cdk && cdk --version
      - name: Check running versions
        run: echo "node:$(node --version), cdk:$(cdk --version), typescript:$(tsc --version)"
      - name: Deploy stack
        run: |
            mkdir build && \
            cd build && \
            cdk init --language=typescript && \
            rm -rf bin lib && cp -r ../iac/bin .;cp -r ../iac/lib .;cp -r ../iac/src . && \
            npm i && cdk synth && cdk deploy --require-approval never